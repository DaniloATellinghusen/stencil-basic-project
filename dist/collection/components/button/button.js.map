{"version":3,"file":"button.js","sourceRoot":"","sources":["../../../src/components/button/button.tsx"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,OAAO,EACP,CAAC,EACD,IAAI,EACJ,MAAM,EACN,IAAI,EACJ,KAAK,EACL,KAAK,GACN,MAAM,eAAe,CAAC;AAEvB;;;;GAIG;AAQH,MAAM,OAAO,MAAM;;;oBAUqC,KAAK;;;oBAe/B,CAAC;;;EAK7B,qBAAqB;IACnB,IAAI;MACF,IAAI,IAAI,CAAC,QAAQ,EAAE;QACjB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC;OACrC;MACD,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC;KACtD;IAAC,OAAO,KAAK,EAAE,GAAE;EACpB,CAAC;EAGD,SAAS,CAAC,KAAoB;IAC5B,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,EAAE;MAC1B,KAAK,CAAC,cAAc,EAAE,CAAC;KACxB;EACH,CAAC;EAGD,OAAO,CAAC,KAAoB;IAC1B,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,EAAE;MACpD,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;KACvE;EACH,CAAC;EAGD,YAAY,CAAC,KAAK;IAChB,IAAI,IAAI,CAAC,QAAQ,EAAE;MACjB,KAAK,CAAC,eAAe,EAAE,CAAC;KACzB;EACH,CAAC;EAGD,OAAO;IACH,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;EAC3B,CAAC;EAED,iBAAiB;IACf,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC;EACnE,CAAC;EAEO,cAAc;IAClB,OAAO,eAAQ,CAAC;EACpB,CAAC;EAED,MAAM;IACJ,OAAO,CACL,EAAC,IAAI,IAAC,IAAI,EAAC,QAAQ,IAChB,CACC,SACE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,EAClC,QAAQ,EAAC,IAAI;MAEb,WAAK,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAC,QAAQ,IACtC,IAAI,CAAC,cAAc,EAAE,CAClB,CACJ,CACL,CACI,CACR,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import {\n  Component,\n  Element,\n  h,\n  Host,\n  Listen,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core';\n\n/**\n * @nativeEvent click  - dispatched when button was clicked\n *\n * @slot default - default slot for the content of the button\n */\n@Component({\n  tag: 'my-button',\n  styleUrls: {\n    vwag: 'themes/vwag/button.vwag.scss'\n  },\n  shadow: { delegatesFocus: true },\n})\nexport class Button {\n\n  /**\n   * icon name e.g. 'clock-24'. Use the following matching icon sizes for the different button sizes: s: 16px m: 24px l: 32px\n   */\n  @Prop({ reflect: true }) readonly icon: string;\n\n  /**\n   * deactivates the button\n   */\n  @Prop({ reflect: true }) readonly disabled: boolean = false;\n\n  /**\n   * optionally specifies the new filename for the downloaded file if a url is specified.\n   */\n  @Prop({ reflect: true }) readonly download: string;\n\n  /**\n   * value of the button. This is the value that will be submitted if the button is placed inside a form.\n   */\n  @Prop({ reflect: true }) readonly value: string;\n\n  @Element() host: HTMLElement;\n  private anchorTag: HTMLElement;\n\n  @State() tabIndex: number = 0;\n\n  @State() backupTabIndex: number;\n\n  @Watch('disabled')\n  handleDisabledChanged() {\n    try {\n      if (this.disabled) {\n        this.backupTabIndex = this.tabIndex;\n      }\n      this.host.shadowRoot.getElementById('button').blur();\n    } catch (event) {}\n  }\n\n  @Listen('keydown')\n  onKeyDown(event: KeyboardEvent) {\n    if (event.code === 'Space') {\n      event.preventDefault();\n    }\n  }\n\n  @Listen('keyup')\n  onKeyUp(event: KeyboardEvent) {\n    if (event.code === 'Enter' || event.code === 'Space') {\n      this.host.dispatchEvent(new window.Event('click', { bubbles: true }));\n    }\n  }\n\n  @Listen('click', { capture: true })\n  captureClick(event) {\n    if (this.disabled) {\n      event.stopPropagation();\n    }\n  }\n\n  @Listen('click')\n  onClick() {\n      this.anchorTag.click();\n  }\n\n  componentWillLoad() {\n    this.backupTabIndex = Number(this.host.getAttribute('tabindex'));\n  }\n\n  private getSlotAndIcon() {\n      return <slot />;\n  }\n\n  render() {\n    return (\n      <Host role=\"button\">\n        {(\n          <a\n            ref={(el) => (this.anchorTag = el)}\n            tabindex=\"-1\"\n          >\n            <div tabIndex={this.tabIndex} id=\"button\">\n              {this.getSlotAndIcon()}\n            </div>\n          </a>\n        )}\n      </Host>\n    );\n  }\n}\n"]}