{"version":3,"names":["buttonVwagCss","Button","exports","class_1","prototype","handleDisabledChanged","this","disabled","backupTabIndex","tabIndex","host","shadowRoot","getElementById","blur","event","onKeyDown","code","preventDefault","onKeyUp","dispatchEvent","window","Event","bubbles","captureClick","stopPropagation","onClick","anchorTag","click","componentWillLoad","Number","getAttribute","getSlotAndIcon","h","render","_this","Host","role","ref","el","tabindex","id","inputVwagCss","Input","handleInput","input","target","value","handleChange","class_2","onFocus","hasFocus","delegateFocusToNativeInput","componentDidLoad","initFormEvent","form","closest","addEventListener","formData","append","name","querySelector","focus","showTypingInfo","showDescription","isLabelSlotProvided","isDescriptionSlotProvided","class","inline","placeholder","onInput","onChange","isInfoContainerNeeded"],"sources":["src/components/button/themes/vwag/button.vwag.scss?tag=my-button&mode=vwag&encapsulation=shadow","src/components/button/button.tsx","src/components/input/themes/vwag/input.vwag.scss?tag=my-input&mode=vwag&encapsulation=shadow","src/components/input/input.tsx"],"sourcesContent":["@import './button.vwag.common';\n\n:host div {\n  color: white;\n  background: darkcyan;\n  border: 1px solid darkcyan;\n}\n\n:host a {\n  color: inherit;\n  border-color: inherit;\n}\n","import {\n  Component,\n  Element,\n  h,\n  Host,\n  Listen,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core';\n\n/**\n * @nativeEvent click  - dispatched when button was clicked\n *\n * @slot default - default slot for the content of the button\n */\n@Component({\n  tag: 'my-button',\n  styleUrls: {\n    vwag: 'themes/vwag/button.vwag.scss'\n  },\n  shadow: { delegatesFocus: true },\n})\nexport class Button {\n\n  /**\n   * icon name e.g. 'clock-24'. Use the following matching icon sizes for the different button sizes: s: 16px m: 24px l: 32px\n   */\n  @Prop({ reflect: true }) readonly icon: string;\n\n  /**\n   * deactivates the button\n   */\n  @Prop({ reflect: true }) readonly disabled: boolean = false;\n\n  /**\n   * optionally specifies the new filename for the downloaded file if a url is specified.\n   */\n  @Prop({ reflect: true }) readonly download: string;\n\n  /**\n   * value of the button. This is the value that will be submitted if the button is placed inside a form.\n   */\n  @Prop({ reflect: true }) readonly value: string;\n\n  @Element() host: HTMLElement;\n  private anchorTag: HTMLElement;\n\n  @State() tabIndex: number = 0;\n\n  @State() backupTabIndex: number;\n\n  @Watch('disabled')\n  handleDisabledChanged() {\n    try {\n      if (this.disabled) {\n        this.backupTabIndex = this.tabIndex;\n      }\n      this.host.shadowRoot.getElementById('button').blur();\n    } catch (event) {}\n  }\n\n  @Listen('keydown')\n  onKeyDown(event: KeyboardEvent) {\n    if (event.code === 'Space') {\n      event.preventDefault();\n    }\n  }\n\n  @Listen('keyup')\n  onKeyUp(event: KeyboardEvent) {\n    if (event.code === 'Enter' || event.code === 'Space') {\n      this.host.dispatchEvent(new window.Event('click', { bubbles: true }));\n    }\n  }\n\n  @Listen('click', { capture: true })\n  captureClick(event) {\n    if (this.disabled) {\n      event.stopPropagation();\n    }\n  }\n\n  @Listen('click')\n  onClick() {\n      this.anchorTag.click();\n  }\n\n  componentWillLoad() {\n    this.backupTabIndex = Number(this.host.getAttribute('tabindex'));\n  }\n\n  private getSlotAndIcon() {\n      return <slot />;\n  }\n\n  render() {\n    return (\n      <Host role=\"button\">\n        {(\n          <a\n            ref={(el) => (this.anchorTag = el)}\n            tabindex=\"-1\"\n          >\n            <div tabIndex={this.tabIndex} id=\"button\">\n              {this.getSlotAndIcon()}\n            </div>\n          </a>\n        )}\n      </Host>\n    );\n  }\n}\n","@import './input.vwag.common';\n\n:host {\n  ::slotted([slot='label']) {\n    color: gray;\n  }\n\n  input {\n    height: 2rem;\n    font-size: 1rem;\n    background: white;\n    border: 1px solid gray;\n    color: darkblue;\n\n    &::placeholder {\n      color: gray;\n    }\n  }\n\n  ::slotted([slot='description']),\n  #typing-info {\n    color: gray;\n  }\n}\n\n:host(:not([disabled=''])) {\n  input {\n    &:hover,\n    &:focus {\n      border-color: darkblue;\n    }\n  }\n}\n","import {\n  Component,\n  Element,\n  h,\n  Host,\n  Listen,\n  Prop,\n  State,\n} from '@stencil/core';\n\n/**\n * @nativeEvent click - dispatched when input was clicked => 'event.target.value' delivers the current value\n * @nativeEvent change - dispatched when input has changed => 'event.target.value' delivers the current value\n * @nativeEvent invalid - dispatched when input is invalid => 'event.target.value' delivers the invalid value\n *\n * @slot description - named slot 'description', here is any HTML content allowed.\n * @slot label - named slot 'label', here is any HTML content allowed.\n */\n@Component({\n  tag: 'my-input',\n  styleUrls: {\n    vwag: 'themes/vwag/input.vwag.scss'\n  },\n  shadow: { delegatesFocus: true },\n})\nexport class Input {\n  /**\n   * toggles readonly mode\n   */\n  @Prop({ reflect: true }) readonly readonly: boolean;\n\n  /**\n   * placeholder of the input-field<br>\n   */\n  @Prop({ reflect: true }) readonly placeholder: string;\n\n  /**\n   * value of the input-field\n   */\n  @Prop({ reflect: true, mutable: true }) value: string;\n\n  /**\n   * sets input-field to readonly\n   */\n  @Prop({ reflect: true }) readonly disabled: boolean;\n\n  /**\n   * specifies the type of input element\n   */\n  @Prop({ reflect: true }) readonly type: string = 'text';\n\n  /**\n   * name of the input element to support forms\n   */\n  @Prop({ reflect: true }) readonly name: string;\n\n  /**\n   * determines which brand to use.\n   */\n  @Prop({ reflect: true }) readonly brand: string = 'vwag';\n\n  @State() hasFocus: boolean;\n\n  @Element() host: HTMLElement;\n\n  @Listen('focus')\n  onFocus() {\n    this.hasFocus = true;\n    this.delegateFocusToNativeInput();\n  }\n\n  @Listen('click')\n  onClick() {\n    this.delegateFocusToNativeInput();\n  }\n\n  componentDidLoad() {\n   this.initFormEvent();\n  }\n\n  private initFormEvent() {\n    const form = this.host.closest('form');\n    if (form == null) return;\n\n    form.addEventListener('formdata', (event: FormDataEvent) => {\n      event.formData.append(this.name, this.value);\n    });\n  }\n\n  private delegateFocusToNativeInput() {\n    this.host.shadowRoot.querySelector('input').focus();\n  }\n\n  private handleInput = (event: InputEvent) => {\n    const input: HTMLInputElement = event.target as HTMLInputElement;\n    this.value = input.value;\n  };\n\n  private handleChange = () => {\n    this.host.dispatchEvent(new window.Event('change'));\n  };\n\n  private showTypingInfo() {\n    return this.hasFocus;\n  }\n\n  private showDescription() {\n      return true;\n  }\n\n  private isLabelSlotProvided(): boolean {\n    return !!this.host.querySelector('[slot=\"label\"]');\n  }\n\n  private isDescriptionSlotProvided(): boolean {\n    return !!this.host.querySelector('[slot=\"description\"]');\n  }\n\n\n  render() {\n    return (\n      <Host tabIndex={this.disabled ? -1 : 0}>\n        <div>\n          {this.isLabelSlotProvided() && (\n            <div id=\"label\" class={{ inline: !this.value && !this.hasFocus }}>\n              <slot name=\"label\" />\n            </div>\n          )}\n          {/*<div id=\"input-wrapper\">*/}\n            <input\n              placeholder={this.placeholder}\n              onInput={this.handleInput}\n              onChange={this.handleChange}\n              value={this.value}\n            />\n          {/*</div>*/}\n          {this.isInfoContainerNeeded() && (\n            <div id=\"info\">\n              {this.isDescriptionSlotProvided() && this.showDescription() && (\n                <div id=\"description\">\n                  <slot name=\"description\" />\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </Host>\n    );\n  }\n\n  private isInfoContainerNeeded() {\n    return (this.isDescriptionSlotProvided() && this.showDescription()) || this.showTypingInfo();\n  }\n}\n"],"mappings":"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"}